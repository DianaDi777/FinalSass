$color-btn-text: $color-backgrounds;
$color-btn-default: $color-main;
$color-btn-hot: $red;
$color-btn-cool: $blue;
$roundedPic: 10px 0 10px 0; // This is a list of elements! It makes pictures on firstpage rounded

%btn 
// % sign means it's invisible class because we don't need it anymore as we extended to different classes
{
	display: inline-block;
	padding: 6px 12px;
	text-align: center;
	white-space: nowrap;
	vertical-align: middle;
	cursor: pointer;
	border: none;
	border-radius: 4px;
	font-family: $font-highlight;
	user-select: none;
	color: $color-btn-text;
}

$color-btn-names: 'default', 'hot', 'cool';
$color-btn-values: $yellow, $red, $blue;
//one variable we use as index of another one

@each $name in $color-btn-names 
// using @each command as required in assigment for 'Flow Content' items. 
//It's useful when you don't know how many items in a list
{
	$choose: index($color-btn-names, $name);

	.btn-#{$name} {
		@extend %btn;
		background-color: nth($color-btn-values, $choose);
		color: $black;
	} // this rule affects 3 buttons on a secondpage.html  
} // the original code  before I applied  a @each command was like this 
// .btn-default { @extend %btn; background: color-btn-default;}
//.btn-hot { @extend %btn; background: color-btn-hot;}
// .btn-cool { @extend %btn; background: color-btn-cool;}





//-------------------------- second set of buttons -----------------------------------//
// in second set of buttons on firstpage.html we are using MAP as required in assigment


$color-btns: (
	defaultTwo: $yellow,
	hotTwo: $red,
	coolTwo: $blue
);

@each $name, $value in $color-btns 

{
	.btn-#{$name} {
		@extend %btn; // using @extend as required in assigment to extend properties of %btn class
		background-color: $value;
		color: $black;
	} 
}

//-------------------------- END of second set of buttons -----------------------------------//


	.grid 
	{
	@include clearfix;
.item {
		float: left;
		@include imagegrid(3, 2%);
	}
img {
		display: block;
		border-radius: nth($roundedPic, 1);
		//nth is a Sass's special funclion 
		max-width: 100%;
	}
}



//________________________________________________________________________________________//

ul {
	ul li strong {
	color: darken($blue, 30%);
}
li em {
	color: darken($yellow, 30%);
}
}


.media li a {
	
	color: $blue;

	&:hover {			
		color: $red ;
	}
}